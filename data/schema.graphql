type Ability implements Node {
  id: ID!
  name: String
  created: String
  modified: String
  description: String
  resource_uri: String
}

type AbilityConnection {
  pageInfo: PageInfo!
  edges: [AbilityEdge]
}

type AbilityEdge {
  node: Ability
  cursor: String!
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Pokedex implements Node {
  id: ID!
  created: String
  modified: String
  name: String
  pokemon(start: Int!, number: Int!): PokemonConnection
  resource_uri: String
}

type Pokemon implements Node {
  id: ID!
  abilities(after: String, first: Int, before: String, last: Int): AbilityConnection
  name: String
}

type PokemonConnection {
  pageInfo: PageInfo!
  edges: [PokemonEdge]
}

type PokemonEdge {
  node: Pokemon
  cursor: String!
}

type Query {
  node(id: ID!): Node
  pokedex: Pokedex
  pokemon(number: Int!): Pokemon
}
